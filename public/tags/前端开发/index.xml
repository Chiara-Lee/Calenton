<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前端开发 on Caleton Academy of Magic</title>
    <link>http://localhost:1313/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/</link>
    <description>Recent content in 前端开发 on Caleton Academy of Magic</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>chiaralee953@foxmail.com (Caleton Academy of Magic)</managingEditor>
    <webMaster>chiaralee953@foxmail.com (Caleton Academy of Magic)</webMaster>
    <lastBuildDate>Wed, 20 Nov 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1.1 (web)style 简史</title>
      <link>http://localhost:1313/notes/computer-science-and-technology/front-end-development/css-the-definitive-guide/1.1/</link>
      <pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate><author>chiaralee953@foxmail.com (Caleton Academy of Magic)</author>
      <guid>http://localhost:1313/notes/computer-science-and-technology/front-end-development/css-the-definitive-guide/1.1/</guid>
      <description>层叠样式表（Cascading Style Sheets，CSS）是一种强大的编程语言，可用于改变文档或文档集合的呈现方式，它几乎已经渗透到网络的每个角落以及许多表面上非网络的环境中。例如，嵌入式设备的显示通常使用 CSS 来设计其用户界面，许多 RSS 客户端允许你对订阅源和订阅条目应用 CSS，一些即时消息客户端使用 CSS 来格式化聊天窗口。CSS 的某些方面甚至可以在 JavaScript (JS) 框架的语法中以及 JS 本身中找到。它无处不在！&#xA;CSS 最早在 1994 年被提出，当时正值互联网开始真正流行之际。当时，浏览器赋予用户大量的样式控制能力——例如，NCSA Mosaic 的显示偏好允许用户定义每种元素的字体系列、大小和颜色。而文档作者却没有任何这样的能力；他们只能将内容标记为段落、某一级别的标题、预格式化文本或其他十几种元素类型之一。如果用户将其浏览器配置为使所有一级标题变得又小又粉红，而所有六级标题变得又大又红，那完全是用户自己的选择。&#xA;CSS 正是在这种环境中被引入的。其目标是为网页作者提供一种简单的声明式样式语言，既灵活又强大，最重要的是，能够同时为作者和用户提供样式控制能力。通过层叠机制，这些样式可以被组合和优先排序，使网站作者和读者都能表达自己的需求——尽管最终的决定权始终在读者手中。&#xA;工作迅速推进，到 1996 年底，CSS1 已经完成。尽管新成立的 CSS 工作组继续推进 CSS2 的开发，但浏览器在以互操作性方式实现 CSS1 时遇到了困难。尽管 CSS 的每个部分本身都相对简单，但它们的组合却产生了一些令人意想不到的复杂行为。不幸的是，还出现了一些问题，比如臭名昭著的盒模型实现差异。这些问题一度威胁到 CSS 的发展，但幸运的是，一些巧妙的提议被实施，浏览器开始趋于一致。在接下来的几年里，随着互操作性的增强以及像《Wired》杂志基于 CSS 的重新设计和 CSS Zen Garden 等高调发展项目的推动，CSS 开始流行起来。&#xA;在这一切发生之前，CSS 工作组于 1998 年初完成了 CSS2 规范。CSS2 甫一完成，随即开始了 CSS3 的开发以及一个经过澄清的版本 CSS2.1 的工作。与当时的潮流一致，最初称为 CSS3 的规范被设计为一系列（理论上）独立的模块，而不是一个庞大的整体规范。这种方法反映了当时活跃的 XHTML 规范，它也因类似的原因被分解为模块。&#xA;对 CSS 进行模块化的理由是，每个模块可以按照自己的节奏进行开发，特别是重要或流行的模块可以沿着万维网联盟（W3C）的进展路径快速推进，而不会被其他模块拖延。事实上，这种方式确实奏效了。截至 2012 年初，已有三个 CSS Level 3 模块（以及 CSS1 和 CSS 2.</description>
    </item>
    <item>
      <title>1.2 Hello HTML and XHTML World</title>
      <link>http://localhost:1313/notes/computer-science-and-technology/front-end-development/css-the-definitive-guide/1.2/</link>
      <pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate><author>chiaralee953@foxmail.com (Caleton Academy of Magic)</author>
      <guid>http://localhost:1313/notes/computer-science-and-technology/front-end-development/css-the-definitive-guide/1.2/</guid>
      <description>有了这些HTML语法的基础知识，现在最好看一下示例文档，看看它的应用程序。我们第一个用严格的HTML 4编写的完整示例如下：&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 &amp;lt;!DOCTYPE HTML PUBLIC &amp;#34;-//W3C//DTD HTML 4.01//EN&amp;#34; &amp;#34;http://www.w3.org/TR/html4/strict.dtd&amp;#34;&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=utf-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Hello HTML 4 World&amp;lt;/title&amp;gt; &amp;lt;!-- Simple hello world in HTML 4.01 strict example --&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;Welcome to the World of HTML&amp;lt;/h1&amp;gt; &amp;lt;hr&amp;gt; &amp;lt;p&amp;gt;HTML &amp;lt;em&amp;gt;really&amp;lt;/em&amp;gt; isn&amp;#39;t so hard!&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;Soon you will &amp;amp;hearts; using HTML.&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;You can put lots of text here if you want.</description>
    </item>
    <item>
      <title>1.3 Viewing Markup Locally</title>
      <link>http://localhost:1313/notes/computer-science-and-technology/front-end-development/css-the-definitive-guide/1.3/</link>
      <pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate><author>chiaralee953@foxmail.com (Caleton Academy of Magic)</author>
      <guid>http://localhost:1313/notes/computer-science-and-technology/front-end-development/css-the-definitive-guide/1.3/</guid>
      <description>使用简单的文本编辑器，输入前面的任一示例并以文件名保存，如 helloworld.html 或 helloworld.htm；你可以选择使用 .htm 或 .html 文件扩展名，但无论你选择哪个进行开发，都要保持一致。这本书的所有文件都使用 .html。&#xA;将示例文件保存到本地文件系统后，在 Web 浏览器中打开它，方法是打开文件菜单，然后根据你的浏览器选择打开、打开页面或打开文件： 一旦您的浏览器读取了该文件，它就应该呈现如下所示的页面： 如果由于某种原因没有使用适当的扩展名保存文件，则浏览器不会尝试解释 HTML 标记。例如，请注意当你尝试以 .txt 扩展名打开内容时: 如果要对文档进行更改，可以更新标记，保存文件，返回浏览器，然后单击重新加载或刷新按钮。有时，浏览器仍会从其缓存中重新加载页面；如果页面在重新加载时没有正确更新，请在按住 Shift 键的同时单击重新加载按钮，浏览器应该会刷新该页面。&#xA;在编写标记时，保持浏览器和编辑器同时打开是一个非常好的主意，以避免不断地重新打开其中之一。许多 Web 编辑器将帮助您将 Web 页面加载到各种浏览器中，甚至直接预览标记的可视化。图1-1显示了 Adobe 广受欢迎的 Dreamweaver 程序[]。 </description>
    </item>
  </channel>
</rss>
